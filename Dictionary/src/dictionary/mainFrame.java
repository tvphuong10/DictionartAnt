package dictionary;
import com.sun.speech.freetts.*;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.text.*;
import javax.swing.*;
import javax.swing.plaf.ScrollBarUI;
/**
 *
 * @author Yorovy
 */
public class mainFrame extends javax.swing.JFrame {

    public mainFrame() {
        initComponents();
        dmt = new DictionaryManagement();
        attributeSet = new SimpleAttributeSet();
        dmt.insertFromFileDict("AnhViet.dict");
        jPopupMenu1.add(popupPanel);
        jPopupMenu2.add(popupPanel2);
        model = new DefaultListModel();
        jList1.setModel(model);
        speechButton.setVisible(false);
        jScrollPane1.getHorizontalScrollBar().setUI(new ScrollBarUI() {
        });
        jScrollPane1.getVerticalScrollBar().setUI(new ScrollBarUI() {
        });
        listIndex = -1;
        addButton.setVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        popupPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        popupPanel2 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jFrame1 = new javax.swing.JFrame();
        jPanel3 = new javax.swing.JPanel();
        RBAdd = new javax.swing.JRadioButton();
        RBRemove = new javax.swing.JRadioButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        menuEditArea = new javax.swing.JTextArea();
        applyButton = new javax.swing.JButton();
        menuSpellField = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        menuSelectedWord = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        menuSearchButton = new javax.swing.JButton();
        menuSearchField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchResult = new javax.swing.JTextPane();
        Header = new javax.swing.JLabel();
        spellField = new javax.swing.JLabel();
        speechButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        menuButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        searchField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        onlineSearch = new javax.swing.JButton();

        jPopupMenu1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPopupMenu1.setBorderPainted(false);
        jPopupMenu1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPopupMenu1.setFocusable(false);

        jScrollPane2.setBorder(null);

        jList1.setBackground(new java.awt.Color(236, 236, 236));
        jList1.setForeground(new java.awt.Color(20, 45, 76));
        jList1.setAutoscrolls(false);
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jList1);

        javax.swing.GroupLayout popupPanelLayout = new javax.swing.GroupLayout(popupPanel);
        popupPanel.setLayout(popupPanelLayout);
        popupPanelLayout.setHorizontalGroup(
            popupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        popupPanelLayout.setVerticalGroup(
            popupPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPopupMenu2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPopupMenu2.setBorderPainted(false);
        jPopupMenu2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPopupMenu2.setFocusable(false);

        jScrollPane5.setBorder(null);

        jList2.setBorder(null);
        jList2.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "ɪ", "ʊ", "ə", "ɜ", "ɒ", "ɔ", "æ", "ʌ", "ɑ", "∫", "ʒ", "ð", "θ", "∫", "η" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList2MouseClicked(evt);
            }
        });
        jList2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jList2KeyReleased(evt);
            }
        });
        jScrollPane5.setViewportView(jList2);

        javax.swing.GroupLayout popupPanel2Layout = new javax.swing.GroupLayout(popupPanel2);
        popupPanel2.setLayout(popupPanel2Layout);
        popupPanel2Layout.setHorizontalGroup(
            popupPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
        );
        popupPanel2Layout.setVerticalGroup(
            popupPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
        );

        jFrame1.setTitle("Chỉnh sửa");
        jFrame1.setBackground(new java.awt.Color(255, 255, 204));
        jFrame1.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                jFrame1WindowClosing(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(228, 242, 240));

        RBAdd.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        RBAdd.setForeground(new java.awt.Color(20, 45, 76));
        RBAdd.setText("Thêm từ");
        RBAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RBAddMouseClicked(evt);
            }
        });

        RBRemove.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        RBRemove.setForeground(new java.awt.Color(20, 45, 76));
        RBRemove.setText("Xóa từ");
        RBRemove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RBRemoveMouseClicked(evt);
            }
        });

        menuEditArea.setEditable(false);
        menuEditArea.setBackground(new java.awt.Color(255, 255, 255));
        menuEditArea.setColumns(20);
        menuEditArea.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        menuEditArea.setForeground(new java.awt.Color(20, 45, 76));
        menuEditArea.setRows(5);
        jScrollPane3.setViewportView(menuEditArea);

        applyButton.setBackground(new java.awt.Color(56, 81, 112));
        applyButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        applyButton.setForeground(new java.awt.Color(255, 255, 255));
        applyButton.setText("Áp dụng");
        applyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyButtonActionPerformed(evt);
            }
        });

        menuSpellField.setEditable(false);
        menuSpellField.setBackground(new java.awt.Color(255, 255, 255));
        menuSpellField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        menuSpellField.setForeground(new java.awt.Color(20, 45, 76));
        menuSpellField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                menuSpellFieldKeyReleased(evt);
            }
        });

        jScrollPane4.setBorder(null);

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(228, 242, 240));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Arial", 2, 12)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(51, 51, 51));
        jTextArea1.setRows(5);
        jTextArea1.setText("Từ được chọn\n\n\n\n\n\nPhiên âm\n\nBản dịch được viết theo định dạng :\n*  Từ loại\n- Các lớp nghĩa\n= Ví dụ + bản dịch của nó\n! Các cụm từ\n- Nghĩa của những cụm từ đó\n\nVí dụ từ: highness\nPhiên âm: 'hainis\nBản dịnh:\n*  danh từ\n- mức cao (thuê giá cả...)\n- sự cao quý, sự cao thượng, sự cao cả\n=the highness of one's character+ đức tính cao cả\n- (Highness) hoàng thân, hoàng tử, công chúa\n!His Highness\n- hoàng thân\n!His Royal Highness\n- hoàng tử\n!Her Royal Highness\n- công chúa\n");
        jTextArea1.setBorder(null);
        jScrollPane4.setViewportView(jTextArea1);

        menuSelectedWord.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        menuSelectedWord.setForeground(new java.awt.Color(20, 45, 76));
        menuSelectedWord.setText(" ");

        jLabel5.setForeground(new java.awt.Color(0, 51, 153));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText(" ");

        jPanel5.setBackground(new java.awt.Color(56, 81, 112));

        menuSearchButton.setBackground(new java.awt.Color(228, 242, 240));
        menuSearchButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        menuSearchButton.setForeground(new java.awt.Color(20, 45, 76));
        menuSearchButton.setText("Chọn ");
        menuSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSearchButtonActionPerformed(evt);
            }
        });

        menuSearchField.setBackground(new java.awt.Color(228, 242, 240));
        menuSearchField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        menuSearchField.setForeground(new java.awt.Color(102, 102, 102));
        menuSearchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                menuSearchFieldKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(236, 236, 236));
        jLabel2.setText("Nhập từ");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(menuSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(menuSearchButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(menuSearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(menuSearchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RBAdd)
                            .addComponent(RBRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(menuSelectedWord, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 112, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(menuSpellField))
                        .addGap(14, 14, 14)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(applyButton))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(applyButton)
                            .addComponent(jLabel5)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(menuSelectedWord, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RBRemove)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RBAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(menuSpellField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3)))
                .addContainerGap())
        );

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Từ điển");

        jPanel1.setBackground(new java.awt.Color(56, 81, 112));

        jScrollPane1.setBackground(new java.awt.Color(236, 236, 236));
        jScrollPane1.setForeground(new java.awt.Color(236, 236, 236));

        searchResult.setEditable(false);
        searchResult.setBackground(new java.awt.Color(236, 236, 236));
        searchResult.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        searchResult.setForeground(new java.awt.Color(20, 45, 76));
        jScrollPane1.setViewportView(searchResult);

        Header.setFont(new java.awt.Font("Rockwell Extra Bold", 0, 24)); // NOI18N
        Header.setForeground(new java.awt.Color(236, 236, 236));
        Header.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        Header.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        Header.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        spellField.setForeground(new java.awt.Color(236, 236, 236));

        speechButton.setBackground(new java.awt.Color(166, 177, 225));
        speechButton.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        speechButton.setForeground(new java.awt.Color(20, 45, 76));
        speechButton.setText("►");
        speechButton.setToolTipText("Phát âm");
        speechButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                speechButtonActionPerformed(evt);
            }
        });

        addButton.setBackground(new java.awt.Color(166, 177, 225));
        addButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        addButton.setForeground(new java.awt.Color(20, 45, 76));
        addButton.setText("+ thêm");
        addButton.setToolTipText("Thêm từ vào từ điển");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(20, 45, 76));

        menuButton.setBackground(new java.awt.Color(20, 45, 76));
        menuButton.setFont(new java.awt.Font("Arial", 0, 21)); // NOI18N
        menuButton.setForeground(new java.awt.Color(255, 255, 255));
        menuButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dictionary/menuIcon.png"))); // NOI18N
        menuButton.setToolTipText("Chỉnh sửa từ điển");
        menuButton.setActionCommand("menubutton");
        menuButton.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(20, 45, 76)));
        menuButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        menuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuButtonActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(236, 236, 236));

        searchField.setBackground(new java.awt.Color(236, 236, 236));
        searchField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        searchField.setForeground(new java.awt.Color(20, 45, 76));
        searchField.setBorder(null);
        searchField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchFieldKeyReleased(evt);
            }
        });

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dictionary/searchIcon.png"))); // NOI18N
        searchButton.setToolTipText("Dịch từ");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(searchField)
            .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        onlineSearch.setBackground(new java.awt.Color(255, 255, 255));
        onlineSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dictionary/onlSearchIcon.png"))); // NOI18N
        onlineSearch.setToolTipText("Dịch trực tuyến từ và câu");
        onlineSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onlineSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(menuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(onlineSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(menuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(onlineSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Header, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(speechButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spellField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Header, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spellField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(speechButton, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(addButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 446, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        JList list = (JList)evt.getSource();
        if (evt.getClickCount() == 2) {
            int index = list.locationToIndex(evt.getPoint());
            String word = model.getElementAt(index).toString();
            if (searchField.isEditable()) {
                search(word);
            } else {
                RBAdd.setText("Sửa từ");
                menuSearchField.setText(word);
                String[] str = dmt.searchOriginal(word);
                menuSpellField.setText(str[0]);
                menuEditArea.setText(str[1]);
                menuSelectedWord.setText(word);
                RBRemove.setEnabled(true);
            }
            jPopupMenu1.setVisible(false);
            addButton.setVisible(false);
        }
    }//GEN-LAST:event_jList1MouseClicked

    private void menuSearchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_menuSearchFieldKeyReleased
        String search = menuSearchField.getText().toLowerCase();
        
        int code = evt.getKeyCode();
        if (search.length() > 0) {
            switch (code) {
                case 10 -> {
                    if (dmt.isExist(menuSearchField.getText())) {
                        menuSelectedWord.setText(menuSearchField.getText());
                        RBRemove.setEnabled(true);
                        RBAdd.setText("Sửa từ");
                        String[] str = dmt.searchOriginal(menuSearchField.getText());
                        menuSpellField.setText(str[0]);
                        menuEditArea.setText(str[1]);
                    } else {
                        menuSpellField.setText("");
                        menuEditArea.setText("");
                        menuSelectedWord.setText("Từ không tồn tại");
                        RBRemove.setEnabled(false);
                        RBAdd.setText("Thêm từ");
                    }
                    jPopupMenu1.setVisible(false);
                }
                case 40 -> {
                    listIndex++;
                    if (listIndex > 6) {
                        listIndex = 6;
                    }
                    if (listIndex > model.size() - 1) {
                        listIndex = model.size() - 1;
                    }
                    menuSearchField.setText(((String) model.getElementAt(listIndex)).strip());
                    jList1.setSelectedIndex(listIndex);
                }
                case 38 -> {
                    listIndex--;
                    if (listIndex < 0) {
                        listIndex = 0;
                    }
                    menuSearchField.setText(((String) model.getElementAt(listIndex)).strip());
                    jList1.setSelectedIndex(listIndex);
                }
                default -> {
                    listIndex = -1;
                    model.removeAllElements();
                    String[] a = dmt.searchResults(search);
                    for (String item : a) {
                        model.addElement(item);
                    }
                    jPopupMenu1.show(menuSearchField, 0, menuSearchField.getHeight());
                }
            }
        }
    }//GEN-LAST:event_menuSearchFieldKeyReleased

    private void RBAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RBAddMouseClicked
        if (RBAdd.isSelected()) {
            RBRemove.setSelected(false);
            menuEditArea.setEditable(true);
            menuSpellField.setEditable(true);
        } else {
            menuEditArea.setEditable(false);
            menuSpellField.setEditable(false);
        }
    }//GEN-LAST:event_RBAddMouseClicked

    private void RBRemoveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RBRemoveMouseClicked
        if (RBRemove.isSelected()) {
            RBAdd.setSelected(false);
            menuEditArea.setEditable(false);
            menuSpellField.setEditable(false);
        }
    }//GEN-LAST:event_RBRemoveMouseClicked

    private void menuSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSearchButtonActionPerformed
        if (dmt.isExist(menuSearchField.getText())) {
            menuSelectedWord.setText(menuSearchField.getText());
            RBRemove.setEnabled(true);
            RBAdd.setText("Sửa từ");
            String[] str = dmt.searchOriginal(menuSearchField.getText());
            menuSpellField.setText(str[0]);
            menuEditArea.setText(str[1]);
        } else {
            menuSpellField.setText("");
            menuEditArea.setText("");
            menuSelectedWord.setText("Từ không tồn tại");
            RBRemove.setEnabled(false);
            RBAdd.setText("Thêm từ");
        }
    }//GEN-LAST:event_menuSearchButtonActionPerformed

    private void applyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyButtonActionPerformed
        String str = menuSearchField.getText();
        String spell = menuSpellField.getText().strip();
        if (spell.length() ==0 ) {
            spell += " ";
        }
        if (str.strip().isEmpty()) {
            jLabel5.setText("Vui lòng nhập Từ");
        } else {
            if (RBRemove.isSelected()) {
                if (dmt.removeWord(str)) {
                    jLabel5.setText("Xóa từ thành công");               
                } else {
                    jLabel5.setText("Không tìm thấy từ cần xóa");
                }          
            } else {
                if (RBAdd.isSelected()) {
                    String exp = menuEditArea.getText().strip();
                    exp += "\n\n";
                    if (exp.isEmpty()) {
                        jLabel5.setText("Vui lòng nhập bản dịch");
                    } else {
                        dmt.addWord(str, spell, exp);
                        jLabel5.setText(RBAdd.getText() + " thành công");
                    }
                } else {
                    jLabel5.setText("Vui lòng lựa chọn thêm(sửa) hoặc xóa từ");
                }
            }         
        }
        menuEditArea.setText("");
        menuSpellField.setText("");
        menuSearchField.setText("");
        RBAdd.setSelected(false);
        RBRemove.setSelected(false);
        try {
            dmt.updateData("AnhViet.dict");
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_applyButtonActionPerformed

    private void jFrame1WindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_jFrame1WindowClosing
        searchField.setEditable(true);
    }//GEN-LAST:event_jFrame1WindowClosing

    private void speechButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_speechButtonActionPerformed
        try {
            System.setProperty("freetts.voices", "com.sun.speech.freetts.en.us.cmu_us_kal.KevinVoiceDirectory");
            VoiceManager vm = VoiceManager.getInstance();
            Voice voice = vm.getVoice("kevin16");
            voice.allocate();
            voice.speak(searchField.getText());
            //System.out.println(((VoiceManager) vm).getVoiceInfo());
        } catch (Exception e) {
            System.out.println("fail");
        }
    }//GEN-LAST:event_speechButtonActionPerformed

    private void searchFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchFieldKeyReleased
        String search = searchField.getText().toLowerCase();
        int code = evt.getKeyCode();
        if (search.length() > 0) {
            switch (code) {
                case 10 -> {
                    listIndex = -1;
                    search(search);
                    addButton.setVisible(false);
                }
                case 40 -> {
                    listIndex++;
                    if (listIndex > 6) {
                        listIndex = 6;
                    }
                    if (listIndex > model.size() - 1) {
                        listIndex = model.size() - 1;
                    }
                    searchField.setText(((String) model.getElementAt(listIndex)).strip());
                    jList1.setSelectedIndex(listIndex);
                }
                case 38 -> {
                    listIndex--;
                    if (listIndex < 0) {
                        listIndex = 0;
                    }
                    searchField.setText(((String) model.getElementAt(listIndex)).strip());
                    jList1.setSelectedIndex(listIndex);
                }
                default -> {
                    listIndex = -1;
                    model.removeAllElements();
                    String[] a = dmt.searchResults(search);
                    for (String item : a) { 
                        model.addElement(item);
                    }   jPopupMenu1.show(searchField, 0, searchField.getHeight());
                }
            }
        }
    }//GEN-LAST:event_searchFieldKeyReleased

    private void menuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuButtonActionPerformed
        searchField.setEditable(false);
        jFrame1.pack();
        jFrame1.setVisible(true);
        menuSelectedWord.setText("");
        RBAdd.setSelected(false);
        RBRemove.setSelected(false);
        menuSpellField.setText("");
        menuEditArea.setText("");
        menuSearchField.setText("");
    }//GEN-LAST:event_menuButtonActionPerformed

    private void onlineSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onlineSearchActionPerformed
        //OnlineSearch.translate("en","vi","dictionary");
        String str = OnlineSearch.translate("en","vi",searchField.getText().strip());
        if (str.equals("!")) {
            searchResult.setText("kết nối không ổn định...");
            addButton.setVisible(false);
        } else {
            searchResult.setText(str);
            addButton.setVisible(true);
        }
        Header.setText(searchField.getText());
        spellField.setText("");
        speechButton.setVisible(false);
    }//GEN-LAST:event_onlineSearchActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        dmt.addWord(searchField.getText().strip().toLowerCase(), " ", searchResult.getText());
         try {
            dmt.updateData("AnhViet.dict");
            spellField.setText("Thêm từ vào từ điển thành công");
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            spellField.setText("Thêm từ thất bại");
        } catch (IOException ex) {
            Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
            spellField.setText("Thêm từ thất bại");
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        String search = searchField.getText().toLowerCase().strip();
        search(search);
    }//GEN-LAST:event_searchButtonActionPerformed

    private void menuSpellFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_menuSpellFieldKeyReleased
        jPopupMenu2.show(menuSpellField, 2, menuSpellField.getHeight());
    }//GEN-LAST:event_menuSpellFieldKeyReleased

    private void jList2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList2MouseClicked
        JList list = (JList)evt.getSource();
        int index = list.locationToIndex(evt.getPoint());
        menuSpellField.setText(menuSpellField.getText() + jList2.getModel().getElementAt(index));        
    }//GEN-LAST:event_jList2MouseClicked

    private void jList2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList2KeyReleased
        menuSpellField.setText(menuSpellField.getText() + evt.getKeyChar());
    }//GEN-LAST:event_jList2KeyReleased
    
    private void search(String search) {
        if (dmt.isExist(search)) {
            speechButton.setVisible(true);
            searchField.setText(search);
            Header.setText(search);
            String[] text = dmt.search(search);
            if (text.length > 0 && text[0].charAt(0) == '/') {
                spellField.setText(text[0]);
            }
            StyledDocument doc = new DefaultStyledDocument();
            attributeSet.addAttribute(StyleConstants.CharacterConstants.Bold, true);
            try {
                for (int i = 1; i < text.length; i++) {
                    if (text[i].charAt(0) == '*') {
                        attributeSet.addAttribute(StyleConstants.CharacterConstants.Bold, true);
                        if (i == 1) {
                            doc.insertString(doc.getLength(),text[i].substring(1).strip() + "\n",attributeSet);
                        } else {
                            doc.insertString(doc.getLength(),"\n" + text[i].substring(1).strip() + "\n",attributeSet);
                        }
                        attributeSet.removeAttribute(StyleConstants.CharacterConstants.Bold);
                    } else {
                        doc.insertString(doc.getLength(),text[i] + "\n",attributeSet);
                    }
                }              
                searchResult.setStyledDocument(doc);
            } catch (BadLocationException badLocationException) {
                System.out.println("com.mycompany.dictionary.mainFrame.jList1MouseClicked()");
            }            
            jPopupMenu1.setVisible(false);
        } else {
            if (search.length() > 0) {
                model.removeAllElements();
                String[] a = dmt.searchSimilar(search);
                for (String item : a) {
                    model.addElement(item);
                }
                jPopupMenu1.show(searchField, 0, searchField.getHeight());
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
              
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new mainFrame().setVisible(true);
        });
    }

    private int listIndex;
    private final DefaultListModel model;
    private final DictionaryManagement dmt;
    private final SimpleAttributeSet attributeSet;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Header;
    private javax.swing.JRadioButton RBAdd;
    private javax.swing.JRadioButton RBRemove;
    private javax.swing.JButton addButton;
    private javax.swing.JButton applyButton;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton menuButton;
    private javax.swing.JTextArea menuEditArea;
    private javax.swing.JButton menuSearchButton;
    private javax.swing.JTextField menuSearchField;
    private javax.swing.JLabel menuSelectedWord;
    private javax.swing.JTextField menuSpellField;
    private javax.swing.JButton onlineSearch;
    private javax.swing.JPanel popupPanel;
    private javax.swing.JPanel popupPanel2;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchField;
    private javax.swing.JTextPane searchResult;
    private javax.swing.JButton speechButton;
    private javax.swing.JLabel spellField;
    // End of variables declaration//GEN-END:variables
}
